/*
* Los identificadores son nombres dados a elementos en un programa como variables,
  funciones, etc.
    => Las reglas para identificadores son:
    - Los identificadores pueden incluir tanto caracteres como dígitos. Sin embargo,
      el identificador no puede comenzar con un dígito.
    - Los identificadores no pueden incluir símbolos especiales excepto el guión
      bajo (_) o un signo de dólar ($).
    - Los identificadores no pueden ser palabras clave.
    - Deben ser únicos.
    - Los identificadores distinguen entre mayúsculas y minúsculas.
    - Los identificadores no pueden contener espacios.
    Ejemplo: firstName, first_name, num1, $result
*/
//1. Object Orientation
var Persona = /** @class */ (function () {
    function Persona() {
    }
    Persona.prototype.origen = function () {
        console.log("Hello World !!!");
    };
    return Persona;
}());
// Llamando al objeto creado
var objPersona = new Persona();
objPersona.origen();
//2. Tipos
// Any. Cualquier tipo.
//number, string, boolean, void, null y undefined.
/*  Una variable inicializada con "undefined" significa que la
    variable no tiene un valor o un objeto asignado, mientras
    que "null" significa que la variable se ha establecido en un
    objeto cuyo valor no está definido.
*/
//3.Aserción de tipo y scope de variable.
var str = '1';
var str2 = str; //str is now of type number 
console.log(str2);
var global_num = 12; //global variable 
var Numbers = /** @class */ (function () {
    function Numbers() {
        this.num_val = 13; //class variable 
    }
    Numbers.prototype.storeNum = function () {
        var local_num = 14; //local variable 
    };
    Numbers.sval = 10; //static field 
    return Numbers;
}());
console.log("Global num: " + global_num);
console.log(Numbers.sval); //static variable  
var obj = new Numbers();
console.log("Global num: " + obj.num_val);
//4. Declaración de variables.
var name2 = "John";
var score1 = 50;
var score2 = 42.50;
var sum = score1 + score2;
console.log("name" + name);
console.log("first score: " + score1);
console.log("second score: " + score2);
console.log("sum of the scores: " + sum);
//5. Tipo de operador.
//Generated by typescript 1.8.10
var num = 12;
console.log(typeof num); //output: number
// 6. Funciones.
// - Definir una función. Tipo de retorno.
function greet() {
    return "Hello World";
}
function caller() {
    var msg = greet(); //function greet() invoked 
    console.log(msg);
}
//invoke function 
caller();
// - Posición de parametros.
function test_param(n1, s1) {
    console.log(n1);
    console.log(s1);
}
test_param(123, "this is a string");
// - Parametros opcionales.
function disp_details(id, name, mail_id) {
    console.log("ID:", id);
    console.log("Name", name);
    if (mail_id != undefined)
        console.log("Email Id", mail_id);
}
disp_details(123, "John");
disp_details(111, "mary", "mary@xyz.com");
